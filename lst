#!/usr/bin/perl
use warnings;

use constant
{
	INDENT => "\t"
};

sub ignore
{
	for $arg (@_){
		for $x (@exclude){
			return 1 if $arg =~ /$x/i;
		}
	}
}

sub lst
{
	for my $dir (@_){
		$dir =~ s#/$##;

		opendir(my $dh, $dir) or die "opendir: $dir: $!\n";
		my @ents = readdir $dh;
		closedir $dh;

		for(@ents){
			my $hidden = m#^\.#;
			my $file = "$dir/$_";

			unless(ignore $file){
				print INDENT x $indent, ($opt{full} ? $file : $_), "\n" if !$hidden or $opt{all};

				if(-d $file and $opt{recursive} and $file !~ m#/\.\.?$#){
					$indent++;
					lst($file);
					$indent--;
				}
			}
		}
	}
}

$indent = 0;

%opt = (
	recursive => 1,
	full      => 0,
	all       => 0,
);

%args = (
	'-R' => [0, \$opt{recursive}],
	'-f' => [1, \$opt{full}     ],
	'-a' => [1, \$opt{all}      ],
);

@exclude = ();

while(@ARGV and $ARGV[0] =~ /^-/){
	if($ARGV[0] eq '--'){
		shift @ARGV;
		last;
	}elsif(my $ref = $args{$ARGV[0]}){
		${${$ref}[1]} = ${$ref}[0];
	}elsif($ARGV[0] =~ /^-x(.+)$/){
		push @exclude, $1;
	}elsif($ARGV[0] eq '--help'){
		print "Usage: $0 [-a] [-R] [-f] [-xREGEX]...\n";
		print "  -a: All files\n";
		print "  -R: Don't recurse\n";
		print "  -f: Show full paths\n";
		print "  -x: Exclude files matching REGEX\n";
		exit 1;
	}else{
		last;
	}

	shift @ARGV;
}

$ARGV[0] = '.' unless @ARGV;

lst @ARGV;
