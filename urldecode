#!/usr/bin/perl
use warnings;

my $full = 0;

sub usage()
{
	print "Usage: $0 [files_to_rename]\n";
	print "  If no files are given, stdin is read\n";
	exit 1;
}

%htmlh = (
	"%c2%a7"  => "S",
	"%d0%94"  => "A",
	"%c3%a9"  => "e",
	'&gt;'    => '>',
	'&lt;'    => '<',
	'&amp;'   => '&',
);

sub decode($)
{
	$_ = $_[0];

	$_ = $` . chr(hex $1) . $' while m#%([0-9A-Za-z]{2})#;

	for $k(keys %htmlh){
		s/$k/$htmlh{$k}/g;
	}

	return $_;
}

sub encode($)
{
	$_ = $_[0];
	my $ret = '';

	for(split //){
		if(/[a-zA-Z0-9_\.-]/ || (!$full && $_ eq "\n")){
			$ret .= $_;
		}else{
			$ret .= '%' . sprintf '%x', ord;
		}
	}

	return $ret;
}

my $f;
(my $basename = $0) =~ s#.*/([^/]+)$#$1#;

if($basename eq 'urlencode'){
	$f = \&encode;
}elsif($basename eq 'urldecode'){
	$f = \&decode;
}else{
	die "$0: need to be invoked as url{en,de}code\n";
}

binmode STDIN;

if(@ARGV > 0 && $ARGV[0] eq '-f'){
	$full = 1;
	shift @ARGV;
}

print $f->($_) while <>;
