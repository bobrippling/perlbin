#!/usr/bin/perl

sub basename($)
{
	return $1 if $_[0] =~ m|.*/([^/]+)$|;
	return $_[0];
}

sub usage()
{
	print "Usage: $0 [-n] [-i] regex [files...]\n";
	exit 1;
}

my($lineno,$regex) = (0,undef);
my %filelist = ();

my %grep_cols = map { split /=/ } grep { /=/ } split /:/, $ENV{GREP_COLORS};
my %colours  = (
	hl   => "\e[" . ($grep_cols{mt} or '1;31') . 'm',
	bg   => "\e[" . ($grep_cols{sl} or '1;30') . 'm',
	norm => "\e[0m"
);

warn basename($0) . ": output isn't a terminal\n" unless -t STDOUT;

my @files;
my $sens = 1;

for(@ARGV){
	if($_ eq '-n'){
		$lineno = 1;
	}elsif($_ eq '-i'){
		$sens = 0;
	}elsif($_ eq '--no-bg'){
		$colours{bg} = "\e[m";
	}elsif($_ eq '--help'){
		usage();
	}elsif(!defined $regex){
		$regex = $_;
	}else{
		push @files, $_;
	}
}
usage() unless defined $regex;

@ARGV = @files;

while(<>){
	print $colours{norm} . $. . ": " if($lineno);

	print $colours{bg};

	if($sens ? m/$regex/o : m/$regex/oi){
		print $` . $colours{hl} . $& . $colours{bg} . $';
	}else{
		print $_;
	}
}

print $colours{norm};
