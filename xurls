#!/usr/bin/perl

use warnings;

$hostchars = '[a-z0-9._+-]';
$pathchars = '[a-z0-9._+#=?&:;%/!,-]';

sub scan($$$)
{
	my ($file, $lineno, $line) = @_;

	while($line =~ s!
      ([a-z]+://)?

# http://

      $hostchars+\.[a-z]+/

# www.tim.google.com/ - the [a-z].com is the main anchor for the whole regex - incase http:// is omitted

      ($pathchars+/\?)*

# check for the index.php? part

      ($pathchars+|\($pathchars+\))*

# check for pathchars, or a set of nested parens

      !!xoi){ # allow space + comments, compile once, strcasecmp

		if($opt{fname} && $file){
			print "$col{red}$file$col{none}:";
		}

		if($opt{lineno}){
			print "$col{green}$lineno$col{none}: ";
		}elsif($opt{fname} && $file){
			print ' ';
		}

		if($opt{hl}){
			print "$`$col{brown}$&$col{none}$'\n";
		}else{
			print "$&\n";
		}
	}
}

sub usage(){
	$printme =<<"!";
Usage: $0 -[Chn] [FILES...]
 -h: highlight
 -C: colour off (only makes sense with -h)
 -n: show line number
!
	print $printme;
	exit 1;
}


%opt = (
	colour => 1,
	lineno => 0,
	fname  => 0,
	hl     => 0
);
%col = (
	brown => "\e[0;31m", # hl
	red   => "\e[0;35m", # fname
	green => "\e[0;32m", # lineno
	none  => "\e[0;0m"
);

for $arg (@ARGV){
	if($arg eq '-h'){
		$opt{hl} = 1;
	}elsif($arg eq '-n'){
		$opt{lineno} = 1;
	}elsif($arg eq '-C'){
		$opt{colour} = 0;
	}elsif($arg eq '--help'){
		usage();
	}else{
		push @files, $arg;
	}
}

usage() if $opt{hl} && !$opt{colour};

$opt{fname} = 1 if $#files > 0 || $opt{lineno};
unless($opt{colour}){
	$col{$_} = '' for keys %col;
}

if(!@files){
	scan(undef, $., $_) while <STDIN>;
}else{
	for $f (@files){
		$n = 1;
		open F, '<', $f or die "$f: $!\n";
		scan($f, $n++, $_) for <F>;
		close F;
	}
}
